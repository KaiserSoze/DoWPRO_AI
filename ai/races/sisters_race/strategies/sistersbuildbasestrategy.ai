----------------------------------------
-- File: 'sistersbuildbasestrategy.ai'
-- Edited by Thudmeizer @ 22.10.2008

class 'SistersBuildBaseStrategy' (BuildBaseStrategy)

function SistersBuildBaseStrategy:__init( baseinfo ) super( baseinfo )

	-- Add build items that can cause an "invalid addon" console message
	--CpuPrerequisites2.AddSpecialItem("sisters_squad_canoness", CpuPrerequisites.BT_Squad)
	CpuPrerequisites2.AddSpecialItem("sisters_wargear_upgrade_lvl_1_divine_light_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("sisters_wargear_upgrade_lvl_1_psy_diadem_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("sisters_wargear_upgrade_lvl_2_emperors_blessing_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("sisters_wargear_upgrade_lvl_2_holy_mantle_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("sisters_wargear_upgrade_lvl_3_holy_rosarius_addon", CpuPrerequisites.BT_AddOn)
	CpuPrerequisites2.AddSpecialItem("sisters_wargear_upgrade_lvl_3_liber_heresius_addon", CpuPrerequisites.BT_AddOn)
	
	-- Add detector units (Best first, worst last)
	self:AddDetectorUnit("sisters_squad_canoness")
	self:AddDetectorUnit("sisters_squad_confessor")
	self:AddDetectorUnit("sisters_squad_imagifer")
	self:AddDetectorUnit("sisters_squad_assassin")
	
	self.heroeWargear = {}
	
	--Heroe Wargear
	-- Name, Req, Power
	table.insert(self.heroeWargear, {"sisters_wargear_upgrade_lvl_1_divine_light_addon",40,30})
	table.insert(self.heroeWargear, {"sisters_wargear_upgrade_lvl_1_psy_diadem_addon",50,30})
	table.insert(self.heroeWargear, {"sisters_wargear_upgrade_lvl_2_emperors_blessing_addon",80,60})
	table.insert(self.heroeWargear, {"sisters_wargear_upgrade_lvl_2_holy_mantle_addon",100,60})
	table.insert(self.heroeWargear, {"sisters_wargear_upgrade_lvl_3_holy_rosarius_addon",160,120})
	table.insert(self.heroeWargear, {"sisters_wargear_upgrade_lvl_3_liber_heresius_addon",200,160})
	
	self.HeroSquadName = "sisters_squad_canoness"
	
	local heroeDelayLimit = 10 --% of waiting for the upgrade 
	local heroeDelay = math.random (1,100)
	local heroeWargearCostFactor = 1.5
	aipushtrace ("BuildBaseStrategy:Heroe Wargear Election")
	
	--choose Upgrades
	self.heroeWargearPattern1 = math.random(1,2)
	self.heroeWargearPattern2 = math.random(3,4)
	self.heroeWargearPattern3 = math.random(5,6)
		
	aitrace ("Heroe Wargear T1: "..self.heroeWargear[self.heroeWargearPattern1][HeroeWargearNameIndex])
	aitrace ("Heroe Wargear T2: "..self.heroeWargear[self.heroeWargearPattern2][HeroeWargearNameIndex])
	aitrace ("Heroe Wargear T3: "..self.heroeWargear[self.heroeWargearPattern3][HeroeWargearNameIndex])
	
	if heroeDelay <= heroeDelayLimit then
		aipoptrace ("Heroe Wargear Delayed")
		for i = 1, table.getn(self.heroeWargear) do
			self.heroeWargear[i][HeroeWargearReqIndex]=self.heroeWargear[i][HeroeWargearReqIndex]*heroeWargearCostFactor
			self.heroeWargear[i][HeroeWargearPowIndex]=self.heroeWargear[i][HeroeWargearPowIndex]*heroeWargearCostFactor
		end
	else
		aipoptrace ("Heroe Wargear Not Delayed")
	end

end

function SistersBuildBaseStrategy:ChooseBuildProgram()

	-- Check build program count
	if (table.getn(self.info.BuildPrograms) ~= 4) then
		return BuildBaseStrategy.ChooseBuildProgram(self)
	end

	-- Get map size and closest enemy distance
	local sMapSize, iClosestEnemyDistance = self:GetMapSize()
		
	-- Set probabilities of the strategies according to the map size
	local iBuildProgram1	-- Allround strategy
	local iBuildProgram2	-- Mass Battle Sisters rush
	local iBuildProgram3	-- Seraphim strategy
	local iBuildProgram4	-- Retributors strategy
	if (sMapSize == "small" or iClosestEnemyDistance <= 70 or cpu_manager.iPlayerCount == 2) then
	
		iBuildProgram1 = 60
		iBuildProgram2 = 40
		iBuildProgram3 = 0
		iBuildProgram4 = 0
		
	elseif (sMapSize == "large" and cpu_manager.iPlayerCount >= 6) then
	
		iBuildProgram1 = 40
		iBuildProgram2 = 40
		iBuildProgram3 = 10
		iBuildProgram4 = 10
	else
	
		iBuildProgram1 = 60
		iBuildProgram2 = 40
		iBuildProgram3 = 0
		iBuildProgram4 = 0
	end
		
	-- Now choose a program
	iBuildProgram2 = iBuildProgram1 + iBuildProgram2
	iBuildProgram3 = iBuildProgram2 + iBuildProgram3
	iBuildProgram4 = iBuildProgram3 + iBuildProgram4
	local iRandom = math.random(1, 100)
	if (iRandom <= iBuildProgram1) then
		return 1
	elseif (iRandom <= iBuildProgram2) then
		return 2
	elseif (iRandom <= iBuildProgram3) then
		return 3
	elseif (iRandom <= iBuildProgram4) then
		return 4
	end
	return 1
end

function SistersBuildBaseStrategy:EvaluateSquadCap()
	
	-- Check squad cap
	if (self:CheckSquadCap(250, 100)) then
		
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Research
		
		if (not cpu_manager.cpu_player:IsResearchComplete( "sisters_squad_cap_research" )) then
			tBuildType.name = "sisters_squad_cap_research"
		elseif not cpu_manager.cpu_player:IsResearchComplete( "sisters_squad_cap_research_1" ) then
			tBuildType.name = "sisters_squad_cap_research_1"
		elseif not cpu_manager.cpu_player:IsResearchComplete( "sisters_squad_cap_research_2" ) then
			tBuildType.name = "sisters_squad_cap_research_2"
		elseif not cpu_manager.cpu_player:IsResearchComplete( "sisters_squad_cap_research_3" ) then
			tBuildType.name = "sisters_squad_cap_research_3"
		else
			return
		end
		
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic research of "..tBuildType.name)
		end
	end
	
	-- Check support cap
	if (self:CheckSupportCap(250, 100)) then
		
		local tBuildType = CpuBuildType()
		tBuildType.btype = CpuPrerequisites.BT_Research
		
		if (not cpu_manager.cpu_player:IsResearchComplete( "sisters_vehicle_cap_research" )) then
			tBuildType.name = "sisters_vehicle_cap_research"
		elseif (not cpu_manager.cpu_player:IsResearchComplete( "sisters_vehicle_cap_research_1" )) then
			tBuildType.name = "sisters_vehicle_cap_research_1"
		elseif (not cpu_manager.cpu_player:IsResearchComplete( "sisters_vehicle_cap_research_2" )) then
			tBuildType.name = "sisters_vehicle_cap_research_2"
		elseif (not cpu_manager.cpu_player:IsResearchComplete( "sisters_vehicle_cap_research_3" )) then
			tBuildType.name = "sisters_vehicle_cap_research_3"
		else
			return
		end
		
		if (self:TryBuild( tBuildType )) then
			aitrace("BuildController: Dynamic research of "..tBuildType.name)
		end
	end
end

function SistersBuildBaseStrategy:GetBuildingName( sType )

	-- Return race specific object string
	if (sType == "HQ") then
		return "sisters_hq"
		
	elseif (sType == "Generator") then
		return "sisters_plasma_generator"
		
	elseif (sType == "BiggerGenerator") then
		return "sisters_thermo_plasma"
		
	elseif (sType == "VehicleBuilding") then
		return "sisters_vehicle_building"
		
	elseif (sType == "ListeningPost") then
		return "sisters_listening_post"
		
	elseif (sType == "Turret") then
		return "sisters_turret_flamer"
		
	elseif (sType == "Mine") then
		return "sisters_mines"
	end
	
	return nil
end

function SistersBuildBaseStrategy:GetAddonBuilding( sType )

	if (sType == "addon_sisters_turret") then
		return "sisters_turret_flamer"
		
	elseif (sType == "addon_sisters_list_post_1") then
		return "sisters_listening_post"
		
	elseif (sType == "addon_sisters_list_post_2") then
		return "sisters_listening_post"

	elseif (sType == "addon_sisters_holy_icon") then
		return "sisters_listening_post"
	end

	for i = 1, table.getn(self.heroeWargear) do
		if (sType == self.heroeWargear[i][HeroeWargearNameIndex]) then
			return "sisters_hq"
		end
	end
	return nil
end

-- Returns the squad cap and support cap of the given squad
function SistersBuildBaseStrategy:GetUnitStats(sSquadName)

	if (sSquadName == "sisters_squad_adeptus_arbites_melee") then
		return 1, 0
	elseif (sSquadName == "sisters_squad_battle_sister") then
		return 2, 0
	elseif (sSquadName == "sisters_squad_seraphim") then
		return 2, 0
	elseif (sSquadName == "sisters_squad_retributors") then
		return 3, 0
	elseif (sSquadName == "sisters_squad_repentia") then
		return 3, 0
	elseif (sSquadName == "sisters_squad_celestian") then
		return 4, 0
	elseif (sSquadName == "sisters_squad_repressor_tank") then
		return 0, 2
	elseif (sSquadName == "sisters_squad_immolator_tank") then
		return 0, 2
	elseif (sSquadName == "sisters_squad_exorcist_tank") then
		return 0, 2
	elseif (sSquadName == "sisters_squad_penitent_engine") then
		return 0, 2
	end
	return 0, 0
end

function SistersBuildBaseStrategy:UpdateTierLevel()

	-- Reset tier level
	self.tierLevel = 1

	-- Check researches
	if cpu_manager.cpu_player:IsResearchComplete("sisters_tier_2") then
		self.tierLevel = 3	
	elseif cpu_manager.cpu_player:IsResearchComplete("sisters_tier_1") then
		self.tierLevel = 2
    end
end

function SistersBuildBaseStrategy:BuildFlexible()

    -- Dynamic research
	-- Item-Syntax: ResearchName, MinTier, RequisitionCost, PowerCost, MinSquadCap, MinSupportCap, SquadName, SquadMinCount

	-- Compute tier 1 researches
	if (self.tierLevel >= 1 and self.m_iArmyStrength >= 1000) then
	
	    -- Infantry upgrades
		self:DynamicResearch("sisters_phosphor_grenades_research", 1, 25, 75, 0, 0, nil, 0)
		self:DynamicResearch("sisters_blessed_ammunition", 1, 80, 60, 0, 0, nil, 0)
		self:DynamicResearch("sisters_health_research_1", 1, 120, 80, 0, 0, nil, 0)
		self:DynamicResearch("sisters_ranged_damage_research_1", 1, 100, 60, 0, 0, "sisters_squad_battle_sister", 2)
		
		-- Leader upgrades
		self:DynamicResearch("sisters_canoness_jumpack", 1, 40, 30, 0, 0, nil, 0)	-- Canoness Jump
    end
	
	-- Compute tier 2 researches
	if (self.tierLevel >= 2 and self.m_iArmyStrength >= 1500) then
		
		-- Infantry upgrades
		self:DynamicResearch("sisters_krak_grenades_research", 2, 60, 40, 0, 0, "sisters_squad_seraphim", 1)
		self:DynamicResearch("sisters_health_research_2", 2, 150, 100, 0, 0, nil, 0)
		self:DynamicResearch("sisters_battlefield_medics_imp_research", 2, 50, 50, 0, 0, "sisters_squad_hospitaller", 2) -- Healing AoE
		self:DynamicResearch("sisters_ranged_damage_research_2", 2, 120, 80, 0, 0, "sisters_squad_battle_sister", 2)
		self:DynamicResearch("sisters_emperors_touch_research", 2, 60, 60, 0, 0, "sisters_squad_hospitaller", 2) -- Emperors Touch
	 
		-- Leader upgrades
		self:DynamicResearch("sisters_leader_melee_upgrade_1", 2, 150, 100, 0, 0, nil, 0) -- Inferno Pistols
		self:DynamicResearch("sisters_commander_health_research_1", 2, 100, 80, 0, 0, nil, 0)
		self:DynamicResearch("sisters_wargear_upgrade_01_power_sword_research_mp", 2, 80, 40, 6, 2, "sisters_squad_canoness", 0)
		self:DynamicResearch("sisters_martyrs_gift", 3, 80, 40, 0, 0, nil, 0)
    end

	-- Compute tier 3 researches
	if (self.tierLevel >= 3 and self.m_iArmyStrength >= 2000) then
	
	    -- Infantry upgrades
	    self:DynamicResearch("sisters_zealot_charge", 3, 80, 60, 0, 0, "sisters_squad_repentia", 1) -- Leap Ability
	
		-- Compute vehicle researches
	    self:DynamicResearch("sisters_vehicle_armor_research", 3, 150, 100, 0, 0, nil, 0)
	    self:DynamicResearch("sisters_holy_promethium_research", 3, 180, 80, 0, 0, nil, 0)
	
		-- Leader upgrades
		self:DynamicResearch("sisters_commander_health_research_2", 3, 200, 80, 0, 0, nil, 0)
		self:DynamicResearch("sisters_wargear_upgrade_02_brazier_of_holy_fire_research_mp", 3, 120, 80, 6, 6, "sisters_squad_canoness", 0)	
		self:DynamicResearch("sisters_divine_pronouncement", 3, 80, 100, 0, 0, "sisters_squad_confessor", 1) -- Divine Pronouncement
    end

		-- DynamicAddon(sAddonName, iAddonCount, iMinTier, iRequisitionCost, iPowerCost, iMinSquadCap, iMinSupportCap, sSquadName, iSquadMinCount)
		if (self:CountSquads("sisters_squad_canoness") > 0 and self.m_iArmyStrength >= 1000 + self.tierLevel * 250) then

		-- Hero wargear
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern1][HeroeWargearNameIndex], 1, 1,self.heroeWargear[self.heroeWargearPattern1][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern1][HeroeWargearPowIndex],6, 0, self.HeroSquadName, 0)
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern2][HeroeWargearNameIndex], 1, 2,self.heroeWargear[self.heroeWargearPattern2][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern2][HeroeWargearPowIndex],12, 0, self.HeroSquadName, 0)
		self:DynamicAddon(self.heroeWargear[self.heroeWargearPattern3][HeroeWargearNameIndex], 1, 3,self.heroeWargear[self.heroeWargearPattern3][HeroeWargearReqIndex], self.heroeWargear[self.heroeWargearPattern3][HeroeWargearPowIndex],16, 4, self.HeroSquadName, 0)
		for i= 1, table.getn(self.heroeWargear) do
			self:DynamicAddon(self.heroeWargear[i][HeroeWargearNameIndex], 1, 2,self.heroeWargear[i][HeroeWargearReqIndex], self.heroeWargear[i][HeroeWargearPowIndex],10, 0,self.HeroSquadName, 0)
		end
	end
	
	-- Restrict dynamic builds to hard difficulty or higher
	if (CpuManager.AISettings.bMultiBuildings) then
	
		-- Item-Syntax: BuildingName, BuildingCount, MinTier, MinRequisition, MinPower, MinSquadCap, MinSupportCap
		if self:GetBuildingCountByName("sisters_hq") > 1 then
		    self:DynamicBuild("sisters_shrine", 2, 2, 800, 200, 6, 2)
		    self:DynamicBuild("sisters_vehicle_building", 2, 2, 200, 800, 6, 2)
		    self:DynamicBuild("sisters_holy_reliquary", 2, 2, 600, 200, 6, 6)
	    end
	end
end

-- Arkhan 01.2006: Method to check if force tech should be computed
function SistersBuildBaseStrategy:ForceTech()

	-- Check time
	if (g_iGMT < 60 * CpuManager.ForceTech.StartTier1) then
		return false
	end

	-- Check resources
	local iRequisition = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Requisition )
	local iPower = resource_manager:GetResourceAmount():Get( ResourceAmount.RT_Power )

	-- Check tier
	local iTierLevel = self:GetTierLevel()
	if (iTierLevel == 1) then

		-- Check resources
		if (iRequisition > 600 and iPower > 200) then
			return false
		end
		
		-- Check for tier2 research
	    if cpu_manager.cpu_player:IsResearchComplete("sisters_tier_1") then
		   return false
		end
		
		return true

	elseif (iTierLevel == 2) then

		-- Check build channel for vehicle building
		if (self:GetBuildingCountByName("sisters_vehicle_building", false) < 1) then
			return true
		end
		
		-- Check time
		if (g_iGMT > 60 * CpuManager.ForceTech.StartTier2 and (iRequisition < 600 or iPower < 600)) then
			return true
		end
		
	end
	return false
end

-- Return placement type for buildings
function SistersBuildBaseStrategy:GetPlacementType(iBuildingID)
	
	-- Check building
	if (cpu_manager:IsHQ(iBuildingID)) then
	    if (self:GetBuildingCountByName("sisters_hq") < 1) then
			return "HQ"
		else
			return "Safeplace"
		end
	elseif (iBuildingID == cpu_manager.stats:GetBuildingID("sisters_shrine") or
		    iBuildingID == cpu_manager.stats:GetBuildingID("sisters_vehicle_building")) then
		return "Military"
	elseif (cpu_manager:IsTurret(iBuildingID)) then
		return "Front2"		
	elseif (cpu_manager:IsMine(iBuildingID)) then
		return "Mine"
	elseif (cpu_manager:IsGenerator(iBuildingID) or
		iBuildingID == cpu_manager.stats:GetBuildingID("sisters_sanctuary") or
		iBuildingID == cpu_manager.stats:GetBuildingID("sisters_holy_reliquary")) then
		return "BaseBack"
	end
	return "Basic"
end

-- Inherited method to modify squad demand
function SistersBuildBaseStrategy:ModifySquadDemand(iUnitID)

	-- No more hospitallers then battle sisters 
	if (iUnitID == cpu_manager.stats:GetSquadID("sisters_squad_hospitaller")) then
		
		-- Check number of squads 
		local hosp_attach = function ( squad_ai )
			return (squad_ai:GetTactic():GetUnitStrength() >= 120 and squad_ai:CanReceiveAttachment())
		end
		local num_attach = self:CountSquads("sisters_squad_battle_sister", hosp_attach) +
				   self:CountSquads("sisters_squad_celestian", hosp_attach) +
				   self:CountSquads("sisters_squad_retributors", hosp_attach)
 
 		-- Check hospitallers count
		local num_hosp = self:CountSquads("sisters_squad_hospitaller")
		if (num_hosp >= num_attach) then
			return 0
		end	
	end

	-- No more imagifers then squads 
	if (iUnitID == cpu_manager.stats:GetSquadID("sisters_squad_imagifer")) then
		
		-- Check number of attachable squads 
		local imag_attach = function ( squad_ai )
			return (squad_ai:GetTactic():GetUnitStrength() >= 120 and squad_ai:CanReceiveAttachment())
		end
		local num_attach = self:CountSquads("sisters_squad_adeptus_arbites_melee", imag_attach) +
				   self:CountSquads("sisters_squad_repentia", imag_attach) 
 
 		-- Check imagifer count
		local num_imag = self:CountSquads("sisters_squad_imagifer")
		if (num_imag >= num_attach) then
			return 0
		end
	end
	
	-- living saint can block build queue while there is not enough faith, only try to build if enough troops
	if (iUnitID == cpu_manager.stats:GetSquadID("sisters_squad_living_saint")) then
		if (cpu_manager:GetArmyStrength() < 4000 or math.random(1,2) == 1) then
			return 0
		end
	end

	return BuildBaseStrategy.ModifySquadDemand(self, iUnitID)
end

-- Arkhan 11.2006: Virtual method for checking out relic units
function SistersBuildBaseStrategy:RelicRequired(sName)

	-- Check name
	if (sName == "sisters_squad_living_saint") then
		return true
    elseif (sName == "sisters_squad_celestian") then
		return true
	elseif (sName == "sisters_wargear_upgrade_lvl_1_psy_diadem_addon") then
		return true
	elseif (sName == "sisters_wargear_upgrade_lvl_1_divine_light_addon") then
		return true
	elseif (sName == "sisters_wargear_upgrade_lvl_2_holy_mantle_addon") then
		return true
	elseif (sName == "sisters_wargear_upgrade_lvl_2_emperors_blessing_addon") then
		return true
	elseif (sName == "sisters_wargear_upgrade_lvl_3_holy_rosarius_addon") then
		return true
	elseif (sName == "sisters_wargear_upgrade_lvl_3_liber_heresius_addon") then
		return true
	elseif (sName == "sisters_wargear_upgrade_01_power_sword_research_mp") then
		return true
	elseif (sName == "sisters_wargear_upgrade_02_brazier_of_holy_fire_research_mp") then
		return true
	end
	return false
end
