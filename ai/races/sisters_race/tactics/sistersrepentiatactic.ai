----------------------------------------
-- File: 'sistersrepentiatactic.ai'
-- Created by Arkhan		@ 23.03.2008

class 'SistersRepentiaTactic' (SistersInfantryTactic)

SistersRepentia = {}

function SistersRepentiaTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Sisters Repentia Tactic")
	if (cpu_manager:GetTierLevel() < 2) then
		self.bLongRange = (math.random(1, 3) ~= 1)
	else
		self.bLongRange = (math.random(1, 2) ~= 1)
	end
end

function SistersRepentiaTactic:InitAbilities()

	-- Init ability ID's
	if (SistersRepentia.fervor_id == nil) then
		SistersRepentia.fervor_id = cpu_manager.stats:GetAbilityID( "sisters_righteous_fervor" )
	end
end

function SistersRepentiaTactic:DoAbilities()

	if (self.squad_ai:IsAttacking() and self.squad_ai:WasRecentlyHurt() and	self.squad_ai:GetHealthPercentage() > 0.4 and
		self.squad_ai:CanDoAbility(SistersRepentia.fervor_id) and not self.squad_ai:IsCapturing() and not self.squad_ai:IsBroken()) then

		-- Increases Speed and Damage but kills squad overtime (Repentia)
		self.squad_ai:DoSpecialAbility(SistersRepentia.fervor_id)
	end
end

function SistersRepentiaTactic:Upgrade()

	-- Check if we are reinforcing
	if (self.squad_ai:IsReinforcing() or not self.squad_ai:HasUpgradableTrooper() or self.bWaitForThreat) then
		return
	end

	-- If I am broken, don't upgrade!
	if (self:IsAffectedByMorale() and self.squad_ai:IsBroken()) then
		return
	end	
	
	-- Only upgrade in healthy state
	if (self.squad_ai:GetNumTroopers() < self.squad_ai:GetMaxTroopers() * 0.5 or self.squad_ai:GetHealthPercentage() < 0.6 or self.squad_ai:IsUnderAttack()) then
		return
	end
end