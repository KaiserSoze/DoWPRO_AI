----------------------------------------
-- File: 'sisterscelestiantactic.ai'
-- Edited by Thudmeizer @ 22.03.2008

class 'SistersCelestianTactic' (SistersInfantryTactic)

SistersCelestian = {}

function SistersCelestianTactic:__init( squad_ai ) super( squad_ai )

	self:SetName("Sisters Celestian Tactic")
	
	-- Set upgrade type
	self.bLongRange = (math.random(1, 2) == 1)
end

function SistersCelestianTactic:InitAbilities()

	-- Init ability ID's
	if (SistersCelestian.shieldfaith_id == nil) then
		SistersCelestian.shieldfaith_id = cpu_manager.stats:GetAbilityID( "sisters_act_of_faith_shield_faith" )
	end
	
	if (SistersCelestian.krak_id == nil) then
		SistersCelestian.krak_id = cpu_manager.stats:GetAbilityID( "sisters_krak_grenades" )
	end
end

function SistersCelestianTactic:DoAbilities()

	-- Check if we are in combat
	if (self.squad_ai:IsInCombat()) then
	
	 	-- Makes the squad invulnerable 
		Ability.DoAbility(self.squad_ai, SistersCelestian.shieldfaith_id)
	 
         	-- Krak grenades
	    	Ability.DoAbilityTarget( self.squad_ai, SistersCelestian.krak_id, Ability.Filters.CloseVehicleEnemy, 1 )
        	Ability.DoAbilityTargetEntity( self.squad_ai, SistersCelestian.krak_id, Ability.EntityFilters.CloseBaseEntityEnemy, 1)
	end

	-- Compute common abilities
	SistersInfantryTactic.DoAbilities(self)
end

function SistersCelestianTactic:Upgrade()

	-- Check upgrade type
	if (self.bLongRange) then
		return
	end

	-- Check if we are reinforcing
	if (self.squad_ai:IsReinforcing() or not self.squad_ai:HasUpgradableTrooper()) then
		return
	end

	-- If I am broken, don't upgrade!
	if (self:IsAffectedByMorale() and self.squad_ai:IsBroken()) then
		return
	end	
	
	-- Only upgrade in healthy state
	if (self.squad_ai:GetNumTroopers() < self.squad_ai:GetMaxTroopers() * 0.6 or self.squad_ai:GetHealthPercentage() < 0.5 or self.squad_ai:IsUnderAttack()) then
		return
	end
	
	-- Check upgrade type
	if (self.bLongRange) then
	
		-- Upgrade to melta gun
	    self.squad_ai:DoBestUpgrade(UnitStatsAI.UC_VehicleMed)
	end
end